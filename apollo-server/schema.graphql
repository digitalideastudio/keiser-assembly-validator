enum LogActionType {
  AUTH_OK
  AUTH_ERROR
  AUTH_LOGOUT
  SERIAL_OK
  SERIAL_ERROR
  SERIAL_CONFIRM_OK
  SERIAL_CONFIRM_ERROR
  MODEL_OK
  MODEL_ERROR
#  PART_OK
  PART_INVALID_ERROR
  PART_DUPLICATE_ERROR
}

type Part {
  index: Int!
  id: String!
  description: String!
}

type Product {
  id: Int!
  startOver: Boolean
  model: String!
  parts: [Part!]!
}

type User {
  id: Int!
  code: String!
  name: String!
}

type LogAction {
  id: Int!
  userName: String!
  action: LogActionType!
  payload: String!
  createdAt: String!
}

type Query {
  fetchUser(code: String!): User
  fetchProducts: [Product!]!
  logActions(dateFrom: String!, dateTo: String!): [LogAction!]!
}

type Mutation {
  logAction(userCode: String, action: LogActionType!, payload: String!): LogAction!
}

type Subscription {
  logActionAdded: LogAction!
}
