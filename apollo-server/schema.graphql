type Part {
  index: Int!
  id: String!
  description: String!
}

type Product {
  index: Int!
  startOver: Boolean
  model: String!
  parts: [Part!]!
}

type User {
  index: Int!
  id: String!
  name: String!
}

type Query {
  fetchUser(id: String!): User
  fetchProducts: [Product!]!
}

enum LogAction {
  AUTH_OK
  AUTH_ERROR
  AUTH_LOGOUT
  SERIAL_OK
  SERIAL_ERROR
  MODEL_OK
  MODEL_ERROR
  PART_OK
  PART_INVALID
  PART_DUPLICATE
  ASSEMBLY_OK
  ASSEMBLY_ERROR
}

type Mutation {
  logAction(userId: String, action: LogAction!, payload: String!): Boolean
}
